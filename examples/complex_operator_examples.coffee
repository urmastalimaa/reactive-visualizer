Rx = require 'rx'

createObserver = ->
  Rx.Observer.create(
    (item) -> console.log(item)
    (error) -> console.log("error:", error, "\n")
    -> console.log("completed\n")
  )

Rx.Observable.interval(300)
  .merge(Rx.Observable.interval(200))
  .take(6)
  .subscribe(createObserver())
# 0 (at 200 ms)
# 0 (at 300 ms)
# 1 (at 400 ms)
# 1 (at 600 ms)
# 2 (at 600 ms)
# 3 (at 800 ms)
# completed (at 800 ms)

Rx.Observable.timer(500)
  .concat(Rx.Observable.timer(200))
  .subscribe(createObserver())
# 0 (at 500 ms)
# 0 (at 700 ms)
# completed (at 700 ms)

Rx.Observable.interval(500)
  .zip(Rx.Observable.interval(200), ((a, b) -> {a: a, b: b}))
  .take(3)
  .subscribe(createObserver())
# { a: 0, b: 1 } (at 500 ms)
# { a: 1, b: 1 } (at 1000 ms)
# { a: 2, b: 2 } (at 1500 ms)
# completed (at 1500 ms)

Rx.Observable.interval(500)
  .combineLatest(Rx.Observable.interval(200), ((a, b) -> {a: a, b: b}))
  .take(5)
  .subscribe(createObserver())
# { a: 0, b: 1 } (at 500 ms)
# { a: 0, b: 2 } (at 600 ms)
# { a: 0, b: 3 } (at 800 ms)
# { a: 0, b: 4 } (at 1000 ms)
# { a: 1, b: 4 } (at 1000 ms)
# completed (at 1000 ms)

Rx.Observable.interval(500)
  .takeUntil(Rx.Observable.timer(2000))
  .subscribe(createObserver())
# 0 (at 500 ms)
# 1 (at 1000 ms)
# 2 (at 1500 ms)
# completed (at 2000 ms)
